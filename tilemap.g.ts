// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "beggining":
            case "beggining1":return tiles.createTilemap(hex`20002000010101010d0a050505050505050505020102020202020202020202020202020205050508010302060606060606060202020202020202020202020202020202020606020401030401010b01010c0103040101010101020201010101010101020201010304010304010a05050505050202020202020202020101020202020202020d0103020502040c030206060606060202020202020202010102020202020202010c0302060609010304010c01010c0101010101010101010102020101010101010103040101010d0302050505050502020202020202020101020202020202010c0d0304010b01010706060606060602020202020202020101020202020202010a050204010d010c01010101010c010d01020201010202010101010101010101030206090c0a050505050505050508010102020101020202020202020202020103040c01010302060606060606020401010202010102020202020202020202010304010a050204010d0101010103040b0101010101010101010101010102020103040103020609010101010d0103040101020202020202020202020202020201030205020401010c010d010101030401010202020202020202020202020202010706060609010a05050505050502040101020201010101010101010101010101010c0d010b0c02020602020606060901010202010102020202010202020202020202020202010202010202010101010101020201010202020201020202020202020202020201020201020202020202020102020202020102020102020102020102020102020202020102020202020202010202020202010202020202010202010202010202020202010202010101020201010101010101020202020201020201020201010101010101020201020202020101010101010101010101010102020102020202020202020202020102020202010102020202020202020202020202010202020202020202020202010202010101010202020202020202020202020201020201010101010101020201020202020101020201010101010101010101010102020102020202020202020102020202010102020102020202020202020202010202010202020202020202010101020201010202010202020202020202020201020201010101010101010101010102020101020201020201010101010102020102020102020202020202020202010202010102020102020202020202010202010202010201010101010101010101020201010202010101010101010101020201020201020202020202020202020202020101020202020202020202020202020102020102020202020202020202020202010102020202020202020202020202010202010101010101010101010101010101010101010101010101010101010101`, img`
22222...........................
....2...........................
....2..2222222..................
22..2..2........................
22.....2........................
22.....2..222222................
22..2222........................
22..2222........................
....222222222222................
....2..........2................
..222..........2................
..2....222222..2................
..2....222222..2................
.....22222222..2................
.....2.........2................
222222.........2................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.castle.tilePath5,sprites.castle.tilePath4,sprites.castle.tilePath6,sprites.castle.tilePath2,sprites.castle.tilePath8,sprites.castle.tilePath7,sprites.castle.tilePath3,sprites.castle.tilePath9,sprites.castle.tilePath1,sprites.castle.tileGrass1,sprites.castle.tileGrass3,sprites.builtin.forestTiles0], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "myTile":
            case "tile1":return tile1;
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
